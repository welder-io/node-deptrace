const expect = require('chai').expect;
const path = require('path');
const url = require('url');
const promise = require('bluebird');

const Deptrace = require('../');
const packageJson = require('../lib/package_json');

const FSTrace = new Deptrace({
  depsFor: Deptrace.packageJson('dependencies'),
  resolve: function (dep, parents) {
    var parentNames = parents.map(function (p) { return p.name; });
    var pkgPath = [
      '../node_modules/',
      parentNames.join('/node_modules/'),
      '/node_modules/',
      dep.name,
      '/package'
    ];
    return require(pkgPath.join(''));
  }
});

describe('packageJson', function () {

  it('should return a method which in turn transforms an input object property to an array of name/version objects', function () {
    var getDependencies = packageJson('dependencies');
    return getDependencies({
      dependencies: {
        moduleOne: '0.1.0',
        moduleTwo: '0.2.0'
      }
    }).then(function (deps) {
      expect(deps).to.deep.equal([
        {
          name: 'moduleOne',
          version: '0.1.0'
        },
        {
          name: 'moduleTwo',
          version: '0.2.0'
        }
      ]);
    });
  });

});

describe('deptrace', function () {
  this.timeout(10000);

  it('should trace a dependency graph on the file system', function () {
    return FSTrace.graph(require('../node_modules/chai/package'))
      .then(function (graph) {
        expect(graph).to.deep.equal({"author":{"name":"Jake Luer","email":"jake@alogicalparadox.com"},"name":"chai","description":"BDD/TDD assertion library for node.js and the browser. Test framework agnostic.","keywords":["test","assertion","assert","testing","chai"],"homepage":"http://chaijs.com","license":"MIT","contributors":[{"name":"Jake Luer","email":"jake@alogicalparadox.com"},{"name":"Domenic Denicola","email":"domenic@domenicdenicola.com","url":"http://domenicdenicola.com"},{"name":"Veselin Todorov","email":"hi@vesln.com"},{"name":"John Firebaugh","email":"john.firebaugh@gmail.com"}],"version":"1.9.1","repository":{"type":"git","url":"https://github.com/chaijs/chai"},"bugs":{"url":"https://github.com/chaijs/chai/issues"},"main":"./index","scripts":{"test":"make test"},"engines":{"node":">= 0.4.0"},"dependencies":{"assertion-error":"1.0.0","deep-eql":"0.1.3"},"devDependencies":{"component":"*","karma":"0.12.x","karma-mocha":"*","karma-sauce-launcher":"0.2.x","karma-phantomjs-launcher":"0.1.1","mocha":"1.17.x","istanbul":"0.2.x"},"readme":"[![Chai Documentation](http://chaijs.com/public/img/chai-logo.png)](http://chaijs.com)\n\nChai is a BDD / TDD assertion library for [node](http://nodejs.org) and the browser that\ncan be delightfully paired with any javascript testing framework.\n\nFor more information or to download plugins, view the [documentation](http://chaijs.com).\n\n[![Build Status](https://travis-ci.org/chaijs/chai.png?branch=master)](https://travis-ci.org/chaijs/chai)\n\n[![Selenium Test Status](https://saucelabs.com/browser-matrix/chaijs.svg)](https://saucelabs.com/u/chaijs)\n\n### Plugins\n\nChai offers a robust Plugin architecture for extending Chai's assertions and interfaces.\n\n- Need a plugin? View the [official plugin list](http://chaijs.com/plugins).\n- Have a plugin and want it listed? Open a Pull Request at [chaijs/chai-docs:plugin.js](https://github.com/chaijs/chai-docs/blob/master/plugins.js#L1-L12). \n- Want to build a plugin? Read the [plugin api documentation](http://chaijs.com/guide/plugins/).\n\n### Related Projects\n\n- [chaijs / assertion-error](https://github.com/chaijs/assertion-error): Custom `Error` constructor thrown upon an assertion failing.\n- [chaijs / deep-eql](https://github.com/chaijs/deep-eql): Improved deep equality testing for Node.js and the browser.\n\n### Contributors\n\n     project  : chai\n     repo age : 2 years, 3 months ago\n     commits  : 756\n     active   : 170 days\n     files    : 57\n     authors  :\n       540  Jake Luer               71.4%\n        79  Veselin Todorov         10.4%\n        43  Domenic Denicola        5.7%\n         6  Ruben Verborgh          0.8%\n         5  George Kats             0.7%\n         5  Jo Liss                 0.7%\n         5  Juliusz Gonera          0.7%\n         5  Scott Nonnenberg        0.7%\n         5  leider                  0.7%\n         4  John Firebaugh          0.5%\n         4  Max Edmands             0.5%\n         4  Nick Heiner             0.5%\n         4  josher19                0.5%\n         3  Andrei Neculau          0.4%\n         3  Duncan Beevers          0.4%\n         3  Jake Rosoman            0.4%\n         3  Jeff Barczewski         0.4%\n         3  Ryunosuke SATO          0.4%\n         3  Veselin                 0.4%\n         2  Bartvds                 0.3%\n         2  Edwin Shao              0.3%\n         2  Jakub Nešetřil          0.3%\n         2  Roman Masek             0.3%\n         2  Teddy Cross             0.3%\n         1  Anand Patil             0.1%\n         1  Benjamin Horsleben      0.1%\n         1  Brandon Payton          0.1%\n         1  Chris Connelly          0.1%\n         1  Chun-Yi                 0.1%\n         1  DD                      0.1%\n         1  Dido Arellano           0.1%\n         1  Jeff Welch              0.1%\n         1  Kilian Ciuffolo         0.1%\n         1  Luís Cardoso            0.1%\n         1  Niklas Närhinen         0.1%\n         1  Paul Miller             0.1%\n         1  Refael Ackermann        0.1%\n         1  Sasha Koss              0.1%\n         1  Victor Costan           0.1%\n         1  Vinay Pulim             0.1%\n         1  Virginie BARDALES       0.1%\n         1  laconbass               0.1%\n         1  piecioshka              0.1%\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n","readmeFilename":"README.md","_id":"chai@1.9.1","_from":"chai@~1.9.1","label":"chai","nodes":[{"name":"assertion-error","version":"1.0.0","description":"Error constructor for test and validation frameworks that implements standardized AssertionError specification.","author":{"name":"Jake Luer","email":"jake@qualiancy.com","url":"http://qualiancy.com"},"license":"MIT","keywords":["test","assertion","assertion-error"],"repository":{"type":"git","url":"git@github.com:chaijs/assertion-error.git"},"engines":{"node":"*"},"main":"./index","scripts":{"test":"make test"},"dependencies":{},"devDependencies":{"component":"*"},"readme":"# AssertionError [![Build Status](https://travis-ci.org/chaijs/assertion-error.png?branch=master)](https://travis-ci.org/chaijs/assertion-error)\n\n> Error constructor for test and validation frameworks that implements standardized AssertionError specification.\n\n## Installation\n\n### Node.js\n\n`assertion-error` is available on [npm](http://npmjs.org).\n\n    $ npm install assertion-error\n\n### Component\n\n`assertion-error` is available as a [component](https://github.com/component/component).\n\n    $ component install chaijs/assertion-error\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2013 Jake Luer <jake@qualiancy.com> (http://qualiancy.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/chaijs/assertion-error/issues"},"homepage":"https://github.com/chaijs/assertion-error","_id":"assertion-error@1.0.0","dist":{"shasum":"c7f85438fdd466bc7ca16ab90c81513797a5d23b"},"_from":"assertion-error@1.0.0","_resolved":"https://registry.npmjs.org/assertion-error/-/assertion-error-1.0.0.tgz","label":"assertion-error","nodes":[]},{"name":"deep-eql","version":"0.1.3","description":"Improved deep equality testing for Node.js and the browser.","author":{"name":"Jake Luer","email":"jake@alogicalparadox.com"},"license":"MIT","keywords":["deep equal","object equal","testing","chai util"],"repository":{"type":"git","url":"git@github.com:chaijs/deep-eql.git"},"engines":{"node":"*"},"main":"./index","scripts":{"test":"make test"},"dependencies":{"type-detect":"0.1.1"},"devDependencies":{"component":"*","coveralls":"2.0.16","jscoverage":"0.3.7","karma":"0.10.x","karma-mocha":"*","mocha":"*","mocha-lcov-reporter":"0.0.1","simple-assert":"*"},"readme":"# deep-eql [![Build Status](https://travis-ci.org/chaijs/deep-eql.png?branch=master)](https://travis-ci.org/chaijs/deep-eql) [![Coverage Status](https://coveralls.io/repos/chaijs/deep-eql/badge.png?branch=master)](https://coveralls.io/r/chaijs/deep-eql?branch=master)\n\n> Improved deep equality testing for Node.js and the browser.\n\n## Installation\n\n### Node.js\n\n`deep-eql` is available on [npm](http://npmjs.org).\n\n    $ npm install deep-eql\n\n### Component\n\n`deep-eql` is available as a [component](https://github.com/component/component).\n\n    $ component install chaijs/deep-eql\n\n## Usage\n\n### Rules\n\n- Strict equality for non-traversable nodes according to [egal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n  - `eql(NaN, NaN).should.be.true;`\n  - `eql(-0, +0).should.be.false;`\n- Arguments are not Arrays:\n  - `eql([], arguments).should.be.false;`\n  - `eql([], Array.prototype.slice.call(arguments)).should.be.true;`\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2013 Jake Luer <jake@alogicalparadox.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/chaijs/deep-eql/issues"},"homepage":"https://github.com/chaijs/deep-eql","_id":"deep-eql@0.1.3","dist":{"shasum":"735cf78c68e161b877d2d61ede00947b16505ecf"},"_from":"deep-eql@0.1.3","_resolved":"https://registry.npmjs.org/deep-eql/-/deep-eql-0.1.3.tgz","label":"deep-eql","nodes":[{"name":"type-detect","version":"0.1.1","description":"Improved typeof detection for node.js and the browser.","author":{"name":"Jake Luer","email":"jake@alogicalparadox.com","url":"http://alogicalparadox.com"},"license":"MIT","keywords":[],"repository":{"type":"git","url":"git@github.com:chaijs/type-detect.git"},"engines":{"node":"*"},"main":"./index","scripts":{"test":"make test"},"dependencies":{},"devDependencies":{"component":"*","coveralls":"2.0.16","jscoverage":"0.3.7","mocha":"*","mocha-lcov-reporter":"0.0.1","mocha-phantomjs":"*","simple-assert":"*"},"readme":"# type-detect [![Build Status](https://travis-ci.org/chaijs/type-detect.png?branch=master)](https://travis-ci.org/chaijs/type-detect) [![Coverage Status](https://coveralls.io/repos/chaijs/type-detect/badge.png?branch=master)](https://coveralls.io/r/chaijs/type-detect?branch=master)\n\n> Improved typeof detection for node.js and the browser.\n\n## Installation\n\n### Node.js\n\n`type-detect` is available on [npm](http://npmjs.org).\n\n    $ npm install type-detect\n\n### Component\n\n`type-detect` is available as a [component](https://github.com/component/component).\n\n    $ component install chaijs/type-detect\n\n## Usage\n\n### Primary\n\nThe primary export of `type-detect` is function that can server as a replacement for \n`typeof`. The results of this function will be more specific than that of native `typeof`.\n\n```js\nvar type = require('type-detect');\n```\n\n#### array\n\n```js\nassert('array' === type([]));\nassert('array' === type(new Array()));\n```\n\n#### regexp\n\n```js\nassert('regexp' === type(/a-z/gi));\nassert('regexp' === type(new RegExp('a-z')));\n```\n\n#### function\n\n```js\nassert('function' === type(function () {}));\n```\n\n#### arguments\n\n```js\n(function () {\n  assert('arguments' === type(arguments));\n})();\n```\n\n#### date\n\n```js\nassert('date' === type(new Date));\n```\n\n#### number\n\n```js\nassert('number' === type(1));\nassert('number' === type(1.234));\nassert('number' === type(-1));\nassert('number' === type(-1.234));\nassert('number' === type(Infinity));\nassert('number' === type(NaN));\n```\n\n#### string\n\n```js\nassert('string' === type('hello world'));\n```\n\n#### null\n\n```js\nassert('null' === type(null));\nassert('null' !== type(undefined));\n```\n\n#### undefined\n\n```js\nassert('undefined' === type(undefined));\nassert('undefined' !== type(null));\n```\n\n#### object\n\n```js\nvar Noop = function () {};\nassert('object' === type({}));\nassert('object' !== type(Noop));\nassert('object' === type(new Noop));\nassert('object' === type(new Object));\nassert('object' === type(new String('hello')));\n```\n\n### Library\n\nA `Library` is a small constructed repository for custom type detections.\n\n```js\nvar lib = new type.Library;\n```\n\n#### .of (obj)\n\n* **@param** _{Mixed}_ object to test\n* **@return** _{String}_  type\n\nExpose replacement `typeof` detection to the library.\n\n```js\nif ('string' === lib.of('hello world')) {\n  // ...\n}\n```\n\n\n#### .define (type, test)\n\n* **@param** _{String}_ type \n* **@param** _{RegExp|Function}_ test \n\nAdd a test to for the `.test()` assertion.\n\nCan be defined as a regular expression:\n\n```js\nlib.define('int', /^[0-9]+$/);\n```\n\n... or as a function:\n\n```js\nlib.define('bln', function (obj) {\n  if ('boolean' === lib.of(obj)) return true;\n  var blns = [ 'yes', 'no', 'true', 'false', 1, 0 ];\n  if ('string' === lib.of(obj)) obj = obj.toLowerCase();\n  return !! ~blns.indexOf(obj);\n});\n```\n\n\n#### .test (obj, test)\n\n* **@param** _{Mixed}_ object \n* **@param** _{String}_ type \n* **@return** _{Boolean}_  result\n\nAssert that an object is of type. Will first\ncheck natives, and if that does not pass it will\nuse the user defined custom tests.\n\n```js\nassert(lib.test('1', 'int'));\nassert(lib.test('yes', 'bln'));\n```\n\n\n\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2013 Jake Luer <jake@alogicalparadox.com> (http://alogicalparadox.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/chaijs/type-detect/issues"},"homepage":"https://github.com/chaijs/type-detect","_id":"type-detect@0.1.1","dist":{"shasum":"ff489cccbedd0068648c691e414ca4a9535d8b3f"},"_from":"type-detect@0.1.1","_resolved":"https://registry.npmjs.org/type-detect/-/type-detect-0.1.1.tgz","label":"type-detect","nodes":[]}]}]});
      });
  });

});
